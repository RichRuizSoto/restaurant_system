<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Panel Administrativo</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet" />
  <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/styles/system/admin.css" />
</head>
<body>
  <div class="admin-container">
    <!-- Sidebar -->
    <aside class="sidebar">
      <h2 class="logo">üçΩÔ∏è Mi Restaurante</h2>
      <nav>
<ul>
  <li><a href="/menu/<%= slug %>"><i class='bx bx-book-open'></i> Men√∫</a></li>
  <li><a href="/pedidos/<%= slug %>"><i class='bx bx-receipt'></i> Pedidos</a></li>
  <li><a href="/productos/<%= slug %>"><i class='bx bx-shopping-bag'></i> Productos</a></li>
  <li><a><i class='bx bx-bar-chart-alt-2'></i> Reportes</a></li>
  <li><a href="/productos/<%= slug %>/crear-empleado"><i class='bx bx-user-plus'></i> Crear Perfil</a></li>
  <li><a><i class='bx bx-dollar-circle'></i> Ventas</a></li>
  <li><a><i class='bx bx-cog'></i> Configuraci√≥n</a></li>
</ul>

      </nav>
    </aside>

    <!-- Main panel -->
    <main class="main-panel">
      <!-- Header -->
      <header class="main-header">
        <div>
          <h1>Panel Administrativo</h1>
          <p>Bienvenido, <strong>Administrador</strong></p>
        </div>
        <div class="header-right">
          <input type="text" placeholder="Buscar..." />
          <div class="user-menu">
            <i class='bx bx-user-circle'></i>
            <a href="/logout">Cerrar sesi√≥n</a>
          </div>
        </div>
      </header>

      <!-- Dashboard KPIs -->
      <section class="dashboard-widgets">
<div class="card">
  <h3>Pedidos Hoy</h3>
  <p id="pedidos-hoy">Cargando...</p>
</div>
<div class="card">
  <h3>Ingresos</h3>
  <p id="ingresos-hoy">$0.00</p>
</div>
<div class="card">
  <h3>Productos Activos</h3>
<p id="productos-activos">Cargando...</p>
</div>

        <div class="card">
          <h3>Clientes Registrados</h3>
          <p>134</p>
        </div>
      </section>

      <!-- Actividad reciente -->
      <section class="recent-activity">
        <h2>√öltimos pedidos</h2>
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Cliente</th>
              <th>Total</th>
              <th>Estado</th>
              <th>Fecha</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>#10023</td>
              <td>Juan P√©rez</td>
              <td>$25.00</td>
              <td><span class="badge delivered">Entregado</span></td>
              <td>03/07/2025</td>
            </tr>
            <tr>
              <td>#10022</td>
              <td>Laura D√≠az</td>
              <td>$48.00</td>
              <td><span class="badge pending">Pendiente</span></td>
              <td>03/07/2025</td>
            </tr>
            <tr>
              <td>#10021</td>
              <td>Mario G√≥mez</td>
              <td>$19.00</td>
              <td><span class="badge preparing">Preparando</span></td>
              <td>02/07/2025</td>
            </tr>
          </tbody>
        </table>
      </section>

      <!-- Footer -->
      <footer class="footer">
        <p>&copy; 2025 Sistema de Restaurantes. Todos los derechos reservados.</p>
      </footer>
    </main>
  </div>


<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const restauranteId = '<%= restId %>'; // Aseg√∫rate de que `restId` se pasa desde el servidor al renderizar `admin.ejs`

  socket.emit('unirseARestaurante', restauranteId);

  socket.on('nuevoPedido', (pedido) => {
    console.log('üì¶ Nuevo pedido recibido:', pedido);

    // Actualizar contador de pedidos hoy
    const contador = document.getElementById("pedidos-hoy");

    if (contador && !isNaN(parseInt(contador.textContent))) {
      contador.textContent = parseInt(contador.textContent) + 1;
    } else {
      // Si es la primera vez o est√° mal cargado
      fetch(`/api/pedidos/hoy/${restauranteId}`)
        .then(res => res.json())
        .then(data => contador.textContent = data.pedidosHoy)
        .catch(err => contador.textContent = "Error");
    }
  });
document.addEventListener("DOMContentLoaded", async () => {
  const restId = '<%= restId %>';

  try {
    // Pedidos hoy
    const resPedidos = await fetch(`/api/pedidos/hoy/${restId}`);
    const dataPedidos = await resPedidos.json();
    document.getElementById("pedidos-hoy").textContent = dataPedidos.pedidosHoy;

    // Ingresos hoy
    const resIngresos = await fetch(`/api/ganancias/ingresos/hoy/${restId}`);
    const dataIngresos = await resIngresos.json();
    document.getElementById("ingresos-hoy").textContent = `$${Number(dataIngresos.ingresosHoy).toFixed(2)}`;

    // Productos activos
    const resProductos = await fetch(`/api/productos/activos/count/${restId}`);
    const dataProductos = await resProductos.json();
    document.getElementById("productos-activos").textContent = dataProductos.productosActivos;

  } catch (err) {
    console.error("‚ùå Error al obtener datos:", err);
    document.getElementById("pedidos-hoy").textContent = "Error";
    document.getElementById("ingresos-hoy").textContent = "Error";
    document.getElementById("productos-activos").textContent = "Error";
  }
});


</script>


</body>
</html>
